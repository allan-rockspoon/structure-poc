/**
 * catalog | Error | Code | |
 * ----------------------------------------------------------------------
 * | - | | itemCodePrefix | 4050 | | codeRequiredParameter |
 * 1 | | codeNotEmptyList | 2 | | codeInvalidParameter | 3 |
 * | codeNotfoundSection | 4 | | codeNotfoundModifier | 5 | |
 * codeInactiveItemModifier | 6 | | codeTenantNotAllowed | 7 | |
 * codeNilContext | 8 | | codeDatabaseError | 9 | | codeControllerError
 * | 10 | | codeInvalidHex | 11 | | codeTransformerError | 12 | |
 * codeTranslationError | 13 | | codeAlreadyPublishedError | 14 | |
 * codeAlreadyUnpublishedError | 15 | | codeInvalidContext | 16 | |
 * codeTranslationNotFound | 17 | | oneOrMoreImagesFailedToUpload
 * | 18 | | invalidMicroserviceResponse | 19 | | invalidFacet | 20
 * | | errorCountingItemsFacet | 21 | | errorListingItemsFacet |
 * 22 | | errListingModifiers | 23 | | errorCountingModifiers | 24
 * | | errorCreatingRecipe | 25 | | errorUpdatingRecipe | 26 | |
 * codeNotfoundRecipes | 27 | | itemDoesntHaveInventoryAttributes
 * | 28 | | invalidTag | 29 | | errorListingTags | 30 | |
 * couldNotDeleteItemRecipe | 31 | | couldNotCountItemProperties
 * | 32 | | couldNotGetItemProperties | 33 | | databaseNotFound
 * | 34 | | couldNotRemoveSizes | 35 | | cannotSendSSE | 36 | |
 * actionIsNotAllowedForObjectType | 37 | | actionIsAllowedOnlyFor | 38
 * | | couldNotFindBundleSection | 39 | | couldNotFindBundleItem | 40 |
 * | sizeDoesNotBelongToItem | 41 | | errorListingItemsApprovalStatus |
 * 42 | | errorCountingItemsApprovalStatus | 43 | | errorVisibilityChange
 * | 44 | | errorInvalidRequest | 45 | | menuVersionIsNil | 46
 * | | eCommerceItemAlreadyExists | 47 | | wrongSliceLength |
 * 48 | | deviceMarketplaceVenue | 49 | | decodeBody | 50 | |
 * errorVisibilityStatus | 51 | | couldNotGetExternalMenu | 52 | |
 * couldNotFindVenue | 53 |
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator
 * program. https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package com.rockspoon.merchant.datasource.rockspoon_merchant.catalog.models

import kotlinx.serialization.Serializable

/**
 * @param id If this is empty it will create a new modifier option will be
 *     created. If not another modifier option is going to be reused.
 * @param modifierOptionId If this is empty it will create a new modifier
 *     option will be created. If not another modifier option is going to
 *     be reused.
 * @param default
 * @param sizeId ID of the size of the item this option points to. No need
 *     to pass for cooking modifier.
 * @param itemId ID of the item this option points to. No need to pass for
 *     cooking modifier. If ingredient or side it will try to find the item
 *     by title and return an error if none found.
 * @param title
 * @param itemModifierOption
 * @param itemToCreate If a new item is to be created for this option you
 *     can use this attribute to create the item on the fly.
 */
@Serializable
data class ModifierOptionRequest(
    val title: String,
    /**
     * If this is empty it will create a new modifier option will be created.
     * If not another modifier option is going to be reused.
     */
    val id: String? = null,
    /**
     * If this is empty it will create a new modifier option will be created.
     * If not another modifier option is going to be reused.
     */
    val modifierOptionId: String? = null,
    val default: Boolean? = null,
    /**
     * ID of the size of the item this option points to. No need to pass for
     * cooking modifier.
     */
    val sizeId: String? = null,
    /**
     * ID of the item this option points to. No need to pass for cooking
     * modifier. If ingredient or side it will try to find the item by title
     * and return an error if none found.
     */
    val itemId: String? = null,
    val itemModifierOption: ItemModifierOption? = null,
    /**
     * If a new item is to be created for this option you can use this
     * attribute to create the item on the fly.
     */
    val itemToCreate: ItemRequestWithTags? = null
)

